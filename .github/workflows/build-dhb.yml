name: Build DHB RustDesk (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ dhb-custom ]   # kendi dalın; istersen değiştir

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true

      # (Opsiyonel ama önerilir) Install ekranını otomatik atlat.
      # Eğer src/ui/install.tis içinde run_without_install yoksa,
      # aşağıdaki blok eklenir.
      - name: Patch install.tis to auto-run portable
        shell: pwsh
        run: |
          $install = 'src/ui/install.tis'
          if (Test-Path $install) {
            $c = Get-Content $install -Raw
            if ($c -notmatch 'run_without_install') {
              @'
// DHB: Install ekranını otomatik atla (portable modda başlat)
function self.ready() {
    handler.run_without_install();
    // view.close(); // pencereyi kapatmak istersen aç
}
'@ | Add-Content -Encoding UTF8 $install
              Write-Host "[+] install.tis patched (auto run without install)."
            } else {
              Write-Host "[=] install.tis already contains run_without_install."
            }
          } else {
            Write-Host "[!] src/ui/install.tis bulunamadı; bu adım atlandı."
          }

      # Submodule içindeki hbb_common/config.rs'i build sırasında yamala
      - name: Patch hbb_common config.rs (DHB defaults)
        shell: pwsh
        run: |
          $cfgA = 'libs/hbb_common/src/config.rs'
          $cfgB = 'hbb_common/src/config.rs'
          $cfg  = if (Test-Path $cfgA) { $cfgA } elseif (Test-Path $cfgB) { $cfgB } else { throw "config.rs bulunamadı (libs/hbb_common veya hbb_common)." }

          $raw  = Get-Content $cfg -Raw
          $raw  = $raw `
            -replace 'pub\s+const\s+RENDEZVOUS_SERVERS:[^;]+;', 'pub const RENDEZVOUS_SERVERS: &[&str] = &["rustdesk.dhb.tr:21116","rustdesk.dhb.tr"];' `
            -replace 'pub\s+const\s+RS_PUB_KEY:[^;]+;', 'pub const RS_PUB_KEY: &str = "FGRByd0nVcWDpmjKvranKmEHxzpxa+fSdqUigMnJfW0=";'
          Set-Content -Encoding UTF8 $cfg $raw
          Write-Host "[+] Patched: $cfg"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        shell: pwsh
        run: python .\build.py

      - name: Collect artifacts
        shell: pwsh
        run: |
          $exe = if (Test-Path 'target\release\rustdesk.exe') {'target\release\rustdesk.exe'}
                 elseif (Test-Path 'target\debug\rustdesk.exe') {'target\debug\rustdesk.exe'}
                 else { throw 'rustdesk.exe not found under target\' }

          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item $exe dist\DHB-RustDesk.exe -Force

          # sciter.dll (UI runtime) tipik konumlardan kopyala (varsa)
          $candidates = @('res\windows\sciter.dll','resources\windows\sciter.dll','sciter.dll')
          foreach ($p in $candidates) {
            if (Test-Path $p) { Copy-Item $p dist\sciter.dll -Force; break }
          }

          Compress-Archive -Path dist\* -DestinationPath dist\DHB-RustDesk-win64.zip -Force
          Write-Host "[✓] Packed dist\DHB-RustDesk-win64.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DHB-RustDesk-win64
          path: dist/DHB-RustDesk-win64.zip
